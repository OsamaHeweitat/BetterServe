-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.5 from Grammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Program                            (0)
	Program -> Statement                               (1)
	Program -> Program SEMICOLON Statement             (2)
	Statement -> GET Selection FROM Tables End         (3)
	Statement -> GET Selection FROM Tables Optionals End   (4)
	Statement -> COMMENT                               (5)
	End -> OUTPUT                                      (6)
	End -> END                                         (7)
	Selection -> ColumnList                            (8)
	Selection -> AST                                   (9)
	ColumnList -> Column                               (10)
	ColumnList -> ColumnList COMMA Column              (11)
	ColumnList -> LPAREN ColumnList IF Boolean OTHERWISE ColumnList RPAREN   (12)
	Column -> INT                                      (13)
	Column -> INT DOT INT                              (14)
	Tables -> LOAD STRING                              (15)
	Tables -> LPAREN Tables TableExpr Tables RPAREN    (16)
	Tables -> LPAREN Tables PLUS Tables RPAREN         (17)
	Tables -> LPAREN Tables TJoin Tables ON Comparison RPAREN   (18)
	Tables -> Tables COMMA Tables                      (19)
	TableExpr -> CARTESIAN                             (20)
	TableExpr -> UNION                                 (21)
	TableExpr -> INTERSECT                             (22)
	TJoin -> INNER                                     (23)
	TJoin -> LEFT                                      (24)
	TJoin -> RIGHT                                     (25)
	TJoin -> FULL                                      (26)
	Optionals -> Operation Optionals                   (27)
	Optionals -> Operation                             (28)
	Operation -> WHEN Boolean                          (29)
	Operation -> STORE STRING                          (30)
	Operation -> AS Outputs                            (31)
	Operation -> ORDER Order                           (32)
	Operation -> GROUPING Comparison                   (33)
	Outputs -> Output                                  (34)
	Outputs -> Outputs COMMA Output                    (35)
	Output -> INT                                      (36)
	Output -> STRING                                   (37)
	Output -> QUOTE INT QUOTE                          (38)
	Order -> IntCalc                                   (39)
	Order -> IntCalc COMMA Order                       (40)
	Order -> UP                                        (41)
	Order -> DOWN                                      (42)
	Boolean -> LPAREN Boolean BoolOp Boolean RPAREN    (43)
	Boolean -> NOT Boolean                             (44)
	Boolean -> TRUE                                    (45)
	Boolean -> FALSE                                   (46)
	Boolean -> LPAREN Boolean RPAREN                   (47)
	Boolean -> Comparison                              (48)
	BoolOp -> AND                                      (49)
	BoolOp -> OR                                       (50)
	BoolOp -> XOR                                      (51)
	Comparison -> Str EQ EQ Str                        (52)
	Comparison -> IntCalc EQ IntCalc                   (53)
	Comparison -> IntCalc GT IntCalc                   (54)
	Comparison -> IntCalc LT IntCalc                   (55)
	Str -> INT                                         (56)
	Str -> INT DOT INT                                 (57)
	Str -> STRING                                      (58)
	Str -> QUOTE Str QUOTE                             (59)
	IntCalc -> LENGTH Str                              (60)
	IntCalc -> NUM INT                                 (61)
	IntCalc -> ORD_OF Str                              (62)
	IntCalc -> IntCalc PLUS IntCalc                    (63)
	IntCalc -> IntCalc MINUS IntCalc                   (64)
	IntCalc -> IntCalc TIMES IntCalc                   (65)
	IntCalc -> IntCalc DIVIDE IntCalc                  (66)
	IntCalc -> IntCalc POWER IntCalc                   (67)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	SEMICOLON      { TokenSemicolon _ }
	GET            { TokenGET _ }
	FROM           { TokenFROM _ }
	COMMENT        { TokenComment _ $$ }
	AST            { TokenAll _ }
	COMMA          { TokenComma _ }
	LPAREN         { TokenLParen _ }
	IF             { TokenIf _ }
	OTHERWISE      { TokenOtherwise _ }
	RPAREN         { TokenRParen _ }
	DOT            { TokenPeriod _ }
	LOAD           { TokenLoad _ }
	PLUS           { TokenPlus _ }
	ON             { TokenOn _ }
	CARTESIAN      { TokenCartesian _ }
	UNION          { TokenUnion _ }
	INTERSECT      { TokenIntersect _ }
	INNER          { TokenInner _ }
	LEFT           { TokenLJoin _ }
	RIGHT          { TokenRJoin _ }
	FULL           { TokenJoin _ }
	OUTPUT         { TokenOutput _ }
	END            { TokenEnd _ }
	WHEN           { TokenWhen _ }
	STORE          { TokenStore _ }
	AS             { TokenAs _ }
	ORDER          { TokenOrder _ }
	GROUPING       { TokenGrouping _ }
	UP             { TokenUp _ }
	DOWN           { TokenDown _ }
	NOT            { TokenNOT _ }
	TRUE           { TokenTrue _ }
	FALSE          { TokenFalse _ }
	AND            { TokenAND _ }
	OR             { TokenOR _ }
	XOR            { TokenXOR _ }
	EQ             { TokenEq _ }
	GT             { TokenGT _ }
	LT             { TokenLT _ }
	QUOTE          { TokenString _ }
	LENGTH         { TokenLength _ }
	ORD_OF         { TokenOrd _ }
	MINUS          { TokenMinus _ }
	TIMES          { TokenMul _ }
	DIVIDE         { TokenDiv _ }
	POWER          { TokenPow _ }
	INT            { TokenDigit _ $$ }
	STRING         { TokenVar _ $$ }
	NUM            { TokenNumber _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Program         rules 1, 2
	Statement       rules 3, 4, 5
	End             rules 6, 7
	Selection       rules 8, 9
	ColumnList      rules 10, 11, 12
	Column          rules 13, 14
	Tables          rules 15, 16, 17, 18, 19
	TableExpr       rules 20, 21, 22
	TJoin           rules 23, 24, 25, 26
	Optionals       rules 27, 28
	Operation       rules 29, 30, 31, 32, 33
	Outputs         rules 34, 35
	Output          rules 36, 37, 38
	Order           rules 39, 40, 41, 42
	Boolean         rules 43, 44, 45, 46, 47, 48
	BoolOp          rules 49, 50, 51
	Comparison      rules 52, 53, 54, 55
	Str             rules 56, 57, 58, 59
	IntCalc         rules 60, 61, 62, 63, 64, 65, 66, 67

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . Program                           (rule 0)

	GET            shift, and enter state 3
	COMMENT        shift, and enter state 4

	Program        goto state 5
	Statement      goto state 2

State 1

	Program -> . Statement                              (rule 1)

	GET            shift, and enter state 3
	COMMENT        shift, and enter state 4

	Statement      goto state 2

State 2

	Program -> Statement .                              (rule 1)

	SEMICOLON      reduce using rule 1
	%eof           reduce using rule 1


State 3

	Statement -> GET . Selection FROM Tables End        (rule 3)
	Statement -> GET . Selection FROM Tables Optionals End    (rule 4)

	AST            shift, and enter state 10
	LPAREN         shift, and enter state 11
	INT            shift, and enter state 12

	Selection      goto state 7
	ColumnList     goto state 8
	Column         goto state 9

State 4

	Statement -> COMMENT .                              (rule 5)

	SEMICOLON      reduce using rule 5
	%eof           reduce using rule 5


State 5

	%start_parse -> Program .                           (rule 0)
	Program -> Program . SEMICOLON Statement            (rule 2)

	SEMICOLON      shift, and enter state 6
	%eof           accept


State 6

	Program -> Program SEMICOLON . Statement            (rule 2)

	GET            shift, and enter state 3
	COMMENT        shift, and enter state 4

	Statement      goto state 17

State 7

	Statement -> GET Selection . FROM Tables End        (rule 3)
	Statement -> GET Selection . FROM Tables Optionals End    (rule 4)

	FROM           shift, and enter state 16


State 8

	Selection -> ColumnList .                           (rule 8)
	ColumnList -> ColumnList . COMMA Column             (rule 11)

	FROM           reduce using rule 8
	COMMA          shift, and enter state 15


State 9

	ColumnList -> Column .                              (rule 10)

	FROM           reduce using rule 10
	COMMA          reduce using rule 10
	IF             reduce using rule 10
	RPAREN         reduce using rule 10


State 10

	Selection -> AST .                                  (rule 9)

	FROM           reduce using rule 9


State 11

	ColumnList -> LPAREN . ColumnList IF Boolean OTHERWISE ColumnList RPAREN    (rule 12)

	LPAREN         shift, and enter state 11
	INT            shift, and enter state 12

	ColumnList     goto state 14
	Column         goto state 9

State 12

	Column -> INT .                                     (rule 13)
	Column -> INT . DOT INT                             (rule 14)

	FROM           reduce using rule 13
	COMMA          reduce using rule 13
	IF             reduce using rule 13
	RPAREN         reduce using rule 13
	DOT            shift, and enter state 13


State 13

	Column -> INT DOT . INT                             (rule 14)

	INT            shift, and enter state 23


State 14

	ColumnList -> ColumnList . COMMA Column             (rule 11)
	ColumnList -> LPAREN ColumnList . IF Boolean OTHERWISE ColumnList RPAREN    (rule 12)

	COMMA          shift, and enter state 15
	IF             shift, and enter state 22


State 15

	ColumnList -> ColumnList COMMA . Column             (rule 11)

	INT            shift, and enter state 12

	Column         goto state 21

State 16

	Statement -> GET Selection FROM . Tables End        (rule 3)
	Statement -> GET Selection FROM . Tables Optionals End    (rule 4)

	LPAREN         shift, and enter state 19
	LOAD           shift, and enter state 20

	Tables         goto state 18

State 17

	Program -> Program SEMICOLON Statement .            (rule 2)

	SEMICOLON      reduce using rule 2
	%eof           reduce using rule 2


State 18

	Statement -> GET Selection FROM Tables . End        (rule 3)
	Statement -> GET Selection FROM Tables . Optionals End    (rule 4)
	Tables -> Tables . COMMA Tables                     (rule 19)

	COMMA          shift, and enter state 43
	OUTPUT         shift, and enter state 44
	END            shift, and enter state 45
	WHEN           shift, and enter state 46
	STORE          shift, and enter state 47
	AS             shift, and enter state 48
	ORDER          shift, and enter state 49
	GROUPING       shift, and enter state 50

	End            goto state 40
	Optionals      goto state 41
	Operation      goto state 42

State 19

	Tables -> LPAREN . Tables TableExpr Tables RPAREN    (rule 16)
	Tables -> LPAREN . Tables PLUS Tables RPAREN        (rule 17)
	Tables -> LPAREN . Tables TJoin Tables ON Comparison RPAREN    (rule 18)

	LPAREN         shift, and enter state 19
	LOAD           shift, and enter state 20

	Tables         goto state 39

State 20

	Tables -> LOAD . STRING                             (rule 15)

	STRING         shift, and enter state 38


State 21

	ColumnList -> ColumnList COMMA Column .             (rule 11)

	FROM           reduce using rule 11
	COMMA          reduce using rule 11
	IF             reduce using rule 11
	RPAREN         reduce using rule 11


State 22

	ColumnList -> LPAREN ColumnList IF . Boolean OTHERWISE ColumnList RPAREN    (rule 12)

	LPAREN         shift, and enter state 28
	NOT            shift, and enter state 29
	TRUE           shift, and enter state 30
	FALSE          shift, and enter state 31
	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Boolean        goto state 24
	Comparison     goto state 25
	Str            goto state 26
	IntCalc        goto state 27

State 23

	Column -> INT DOT INT .                             (rule 14)

	FROM           reduce using rule 14
	COMMA          reduce using rule 14
	IF             reduce using rule 14
	RPAREN         reduce using rule 14


State 24

	ColumnList -> LPAREN ColumnList IF Boolean . OTHERWISE ColumnList RPAREN    (rule 12)

	OTHERWISE      shift, and enter state 92


State 25

	Boolean -> Comparison .                             (rule 48)

	OTHERWISE      reduce using rule 48
	RPAREN         reduce using rule 48
	OUTPUT         reduce using rule 48
	END            reduce using rule 48
	WHEN           reduce using rule 48
	STORE          reduce using rule 48
	AS             reduce using rule 48
	ORDER          reduce using rule 48
	GROUPING       reduce using rule 48
	AND            reduce using rule 48
	OR             reduce using rule 48
	XOR            reduce using rule 48


State 26

	Comparison -> Str . EQ EQ Str                       (rule 52)

	EQ             shift, and enter state 91


State 27

	Comparison -> IntCalc . EQ IntCalc                  (rule 53)
	Comparison -> IntCalc . GT IntCalc                  (rule 54)
	Comparison -> IntCalc . LT IntCalc                  (rule 55)
	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	PLUS           shift, and enter state 83
	EQ             shift, and enter state 84
	GT             shift, and enter state 85
	LT             shift, and enter state 86
	MINUS          shift, and enter state 87
	TIMES          shift, and enter state 88
	DIVIDE         shift, and enter state 89
	POWER          shift, and enter state 90


State 28

	Boolean -> LPAREN . Boolean BoolOp Boolean RPAREN    (rule 43)
	Boolean -> LPAREN . Boolean RPAREN                  (rule 47)

	LPAREN         shift, and enter state 28
	NOT            shift, and enter state 29
	TRUE           shift, and enter state 30
	FALSE          shift, and enter state 31
	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Boolean        goto state 82
	Comparison     goto state 25
	Str            goto state 26
	IntCalc        goto state 27

State 29

	Boolean -> NOT . Boolean                            (rule 44)

	LPAREN         shift, and enter state 28
	NOT            shift, and enter state 29
	TRUE           shift, and enter state 30
	FALSE          shift, and enter state 31
	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Boolean        goto state 81
	Comparison     goto state 25
	Str            goto state 26
	IntCalc        goto state 27

State 30

	Boolean -> TRUE .                                   (rule 45)

	OTHERWISE      reduce using rule 45
	RPAREN         reduce using rule 45
	OUTPUT         reduce using rule 45
	END            reduce using rule 45
	WHEN           reduce using rule 45
	STORE          reduce using rule 45
	AS             reduce using rule 45
	ORDER          reduce using rule 45
	GROUPING       reduce using rule 45
	AND            reduce using rule 45
	OR             reduce using rule 45
	XOR            reduce using rule 45


State 31

	Boolean -> FALSE .                                  (rule 46)

	OTHERWISE      reduce using rule 46
	RPAREN         reduce using rule 46
	OUTPUT         reduce using rule 46
	END            reduce using rule 46
	WHEN           reduce using rule 46
	STORE          reduce using rule 46
	AS             reduce using rule 46
	ORDER          reduce using rule 46
	GROUPING       reduce using rule 46
	AND            reduce using rule 46
	OR             reduce using rule 46
	XOR            reduce using rule 46


State 32

	Str -> QUOTE . Str QUOTE                            (rule 59)

	QUOTE          shift, and enter state 32
	INT            shift, and enter state 35
	STRING         shift, and enter state 36

	Str            goto state 80

State 33

	IntCalc -> LENGTH . Str                             (rule 60)

	QUOTE          shift, and enter state 32
	INT            shift, and enter state 35
	STRING         shift, and enter state 36

	Str            goto state 79

State 34

	IntCalc -> ORD_OF . Str                             (rule 62)

	QUOTE          shift, and enter state 32
	INT            shift, and enter state 35
	STRING         shift, and enter state 36

	Str            goto state 78

State 35

	Str -> INT .                                        (rule 56)
	Str -> INT . DOT INT                                (rule 57)

	COMMA          reduce using rule 56
	OTHERWISE      reduce using rule 56
	RPAREN         reduce using rule 56
	DOT            shift, and enter state 77
	PLUS           reduce using rule 56
	OUTPUT         reduce using rule 56
	END            reduce using rule 56
	WHEN           reduce using rule 56
	STORE          reduce using rule 56
	AS             reduce using rule 56
	ORDER          reduce using rule 56
	GROUPING       reduce using rule 56
	AND            reduce using rule 56
	OR             reduce using rule 56
	XOR            reduce using rule 56
	EQ             reduce using rule 56
	GT             reduce using rule 56
	LT             reduce using rule 56
	QUOTE          reduce using rule 56
	MINUS          reduce using rule 56
	TIMES          reduce using rule 56
	DIVIDE         reduce using rule 56
	POWER          reduce using rule 56


State 36

	Str -> STRING .                                     (rule 58)

	COMMA          reduce using rule 58
	OTHERWISE      reduce using rule 58
	RPAREN         reduce using rule 58
	PLUS           reduce using rule 58
	OUTPUT         reduce using rule 58
	END            reduce using rule 58
	WHEN           reduce using rule 58
	STORE          reduce using rule 58
	AS             reduce using rule 58
	ORDER          reduce using rule 58
	GROUPING       reduce using rule 58
	AND            reduce using rule 58
	OR             reduce using rule 58
	XOR            reduce using rule 58
	EQ             reduce using rule 58
	GT             reduce using rule 58
	LT             reduce using rule 58
	QUOTE          reduce using rule 58
	MINUS          reduce using rule 58
	TIMES          reduce using rule 58
	DIVIDE         reduce using rule 58
	POWER          reduce using rule 58


State 37

	IntCalc -> NUM . INT                                (rule 61)

	INT            shift, and enter state 76


State 38

	Tables -> LOAD STRING .                             (rule 15)

	COMMA          reduce using rule 15
	RPAREN         reduce using rule 15
	PLUS           reduce using rule 15
	ON             reduce using rule 15
	CARTESIAN      reduce using rule 15
	UNION          reduce using rule 15
	INTERSECT      reduce using rule 15
	INNER          reduce using rule 15
	LEFT           reduce using rule 15
	RIGHT          reduce using rule 15
	FULL           reduce using rule 15
	OUTPUT         reduce using rule 15
	END            reduce using rule 15
	WHEN           reduce using rule 15
	STORE          reduce using rule 15
	AS             reduce using rule 15
	ORDER          reduce using rule 15
	GROUPING       reduce using rule 15


State 39

	Tables -> LPAREN Tables . TableExpr Tables RPAREN    (rule 16)
	Tables -> LPAREN Tables . PLUS Tables RPAREN        (rule 17)
	Tables -> LPAREN Tables . TJoin Tables ON Comparison RPAREN    (rule 18)
	Tables -> Tables . COMMA Tables                     (rule 19)

	COMMA          shift, and enter state 43
	PLUS           shift, and enter state 68
	CARTESIAN      shift, and enter state 69
	UNION          shift, and enter state 70
	INTERSECT      shift, and enter state 71
	INNER          shift, and enter state 72
	LEFT           shift, and enter state 73
	RIGHT          shift, and enter state 74
	FULL           shift, and enter state 75

	TableExpr      goto state 66
	TJoin          goto state 67

State 40

	Statement -> GET Selection FROM Tables End .        (rule 3)

	SEMICOLON      reduce using rule 3
	%eof           reduce using rule 3


State 41

	Statement -> GET Selection FROM Tables Optionals . End    (rule 4)

	OUTPUT         shift, and enter state 44
	END            shift, and enter state 45

	End            goto state 65

State 42

	Optionals -> Operation . Optionals                  (rule 27)
	Optionals -> Operation .                            (rule 28)

	OUTPUT         reduce using rule 28
	END            reduce using rule 28
	WHEN           shift, and enter state 46
	STORE          shift, and enter state 47
	AS             shift, and enter state 48
	ORDER          shift, and enter state 49
	GROUPING       shift, and enter state 50

	Optionals      goto state 64
	Operation      goto state 42

State 43

	Tables -> Tables COMMA . Tables                     (rule 19)

	LPAREN         shift, and enter state 19
	LOAD           shift, and enter state 20

	Tables         goto state 63

State 44

	End -> OUTPUT .                                     (rule 6)

	SEMICOLON      reduce using rule 6
	%eof           reduce using rule 6


State 45

	End -> END .                                        (rule 7)

	SEMICOLON      reduce using rule 7
	%eof           reduce using rule 7


State 46

	Operation -> WHEN . Boolean                         (rule 29)

	LPAREN         shift, and enter state 28
	NOT            shift, and enter state 29
	TRUE           shift, and enter state 30
	FALSE          shift, and enter state 31
	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Boolean        goto state 62
	Comparison     goto state 25
	Str            goto state 26
	IntCalc        goto state 27

State 47

	Operation -> STORE . STRING                         (rule 30)

	STRING         shift, and enter state 61


State 48

	Operation -> AS . Outputs                           (rule 31)

	QUOTE          shift, and enter state 58
	INT            shift, and enter state 59
	STRING         shift, and enter state 60

	Outputs        goto state 56
	Output         goto state 57

State 49

	Operation -> ORDER . Order                          (rule 32)

	UP             shift, and enter state 54
	DOWN           shift, and enter state 55
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	Order          goto state 52
	IntCalc        goto state 53

State 50

	Operation -> GROUPING . Comparison                  (rule 33)

	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Comparison     goto state 51
	Str            goto state 26
	IntCalc        goto state 27

State 51

	Operation -> GROUPING Comparison .                  (rule 33)

	OUTPUT         reduce using rule 33
	END            reduce using rule 33
	WHEN           reduce using rule 33
	STORE          reduce using rule 33
	AS             reduce using rule 33
	ORDER          reduce using rule 33
	GROUPING       reduce using rule 33


State 52

	Operation -> ORDER Order .                          (rule 32)

	OUTPUT         reduce using rule 32
	END            reduce using rule 32
	WHEN           reduce using rule 32
	STORE          reduce using rule 32
	AS             reduce using rule 32
	ORDER          reduce using rule 32
	GROUPING       reduce using rule 32


State 53

	Order -> IntCalc .                                  (rule 39)
	Order -> IntCalc . COMMA Order                      (rule 40)
	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	COMMA          shift, and enter state 115
	PLUS           shift, and enter state 83
	OUTPUT         reduce using rule 39
	END            reduce using rule 39
	WHEN           reduce using rule 39
	STORE          reduce using rule 39
	AS             reduce using rule 39
	ORDER          reduce using rule 39
	GROUPING       reduce using rule 39
	MINUS          shift, and enter state 87
	TIMES          shift, and enter state 88
	DIVIDE         shift, and enter state 89
	POWER          shift, and enter state 90


State 54

	Order -> UP .                                       (rule 41)

	OUTPUT         reduce using rule 41
	END            reduce using rule 41
	WHEN           reduce using rule 41
	STORE          reduce using rule 41
	AS             reduce using rule 41
	ORDER          reduce using rule 41
	GROUPING       reduce using rule 41


State 55

	Order -> DOWN .                                     (rule 42)

	OUTPUT         reduce using rule 42
	END            reduce using rule 42
	WHEN           reduce using rule 42
	STORE          reduce using rule 42
	AS             reduce using rule 42
	ORDER          reduce using rule 42
	GROUPING       reduce using rule 42


State 56

	Operation -> AS Outputs .                           (rule 31)
	Outputs -> Outputs . COMMA Output                   (rule 35)

	COMMA          shift, and enter state 114
	OUTPUT         reduce using rule 31
	END            reduce using rule 31
	WHEN           reduce using rule 31
	STORE          reduce using rule 31
	AS             reduce using rule 31
	ORDER          reduce using rule 31
	GROUPING       reduce using rule 31


State 57

	Outputs -> Output .                                 (rule 34)

	COMMA          reduce using rule 34
	OUTPUT         reduce using rule 34
	END            reduce using rule 34
	WHEN           reduce using rule 34
	STORE          reduce using rule 34
	AS             reduce using rule 34
	ORDER          reduce using rule 34
	GROUPING       reduce using rule 34


State 58

	Output -> QUOTE . INT QUOTE                         (rule 38)

	INT            shift, and enter state 113


State 59

	Output -> INT .                                     (rule 36)

	COMMA          reduce using rule 36
	OUTPUT         reduce using rule 36
	END            reduce using rule 36
	WHEN           reduce using rule 36
	STORE          reduce using rule 36
	AS             reduce using rule 36
	ORDER          reduce using rule 36
	GROUPING       reduce using rule 36


State 60

	Output -> STRING .                                  (rule 37)

	COMMA          reduce using rule 37
	OUTPUT         reduce using rule 37
	END            reduce using rule 37
	WHEN           reduce using rule 37
	STORE          reduce using rule 37
	AS             reduce using rule 37
	ORDER          reduce using rule 37
	GROUPING       reduce using rule 37


State 61

	Operation -> STORE STRING .                         (rule 30)

	OUTPUT         reduce using rule 30
	END            reduce using rule 30
	WHEN           reduce using rule 30
	STORE          reduce using rule 30
	AS             reduce using rule 30
	ORDER          reduce using rule 30
	GROUPING       reduce using rule 30


State 62

	Operation -> WHEN Boolean .                         (rule 29)

	OUTPUT         reduce using rule 29
	END            reduce using rule 29
	WHEN           reduce using rule 29
	STORE          reduce using rule 29
	AS             reduce using rule 29
	ORDER          reduce using rule 29
	GROUPING       reduce using rule 29


State 63

	Tables -> Tables . COMMA Tables                     (rule 19)
	Tables -> Tables COMMA Tables .                     (rule 19)

	COMMA          shift, and enter state 43
	RPAREN         reduce using rule 19
	PLUS           reduce using rule 19
	ON             reduce using rule 19
	CARTESIAN      reduce using rule 19
	UNION          reduce using rule 19
	INTERSECT      reduce using rule 19
	INNER          reduce using rule 19
	LEFT           reduce using rule 19
	RIGHT          reduce using rule 19
	FULL           reduce using rule 19
	OUTPUT         reduce using rule 19
	END            reduce using rule 19
	WHEN           reduce using rule 19
	STORE          reduce using rule 19
	AS             reduce using rule 19
	ORDER          reduce using rule 19
	GROUPING       reduce using rule 19


State 64

	Optionals -> Operation Optionals .                  (rule 27)

	OUTPUT         reduce using rule 27
	END            reduce using rule 27


State 65

	Statement -> GET Selection FROM Tables Optionals End .    (rule 4)

	SEMICOLON      reduce using rule 4
	%eof           reduce using rule 4


State 66

	Tables -> LPAREN Tables TableExpr . Tables RPAREN    (rule 16)

	LPAREN         shift, and enter state 19
	LOAD           shift, and enter state 20

	Tables         goto state 112

State 67

	Tables -> LPAREN Tables TJoin . Tables ON Comparison RPAREN    (rule 18)

	LPAREN         shift, and enter state 19
	LOAD           shift, and enter state 20

	Tables         goto state 111

State 68

	Tables -> LPAREN Tables PLUS . Tables RPAREN        (rule 17)

	LPAREN         shift, and enter state 19
	LOAD           shift, and enter state 20

	Tables         goto state 110

State 69

	TableExpr -> CARTESIAN .                            (rule 20)

	LPAREN         reduce using rule 20
	LOAD           reduce using rule 20


State 70

	TableExpr -> UNION .                                (rule 21)

	LPAREN         reduce using rule 21
	LOAD           reduce using rule 21


State 71

	TableExpr -> INTERSECT .                            (rule 22)

	LPAREN         reduce using rule 22
	LOAD           reduce using rule 22


State 72

	TJoin -> INNER .                                    (rule 23)

	LPAREN         reduce using rule 23
	LOAD           reduce using rule 23


State 73

	TJoin -> LEFT .                                     (rule 24)

	LPAREN         reduce using rule 24
	LOAD           reduce using rule 24


State 74

	TJoin -> RIGHT .                                    (rule 25)

	LPAREN         reduce using rule 25
	LOAD           reduce using rule 25


State 75

	TJoin -> FULL .                                     (rule 26)

	LPAREN         reduce using rule 26
	LOAD           reduce using rule 26


State 76

	IntCalc -> NUM INT .                                (rule 61)

	COMMA          reduce using rule 61
	OTHERWISE      reduce using rule 61
	RPAREN         reduce using rule 61
	PLUS           reduce using rule 61
	OUTPUT         reduce using rule 61
	END            reduce using rule 61
	WHEN           reduce using rule 61
	STORE          reduce using rule 61
	AS             reduce using rule 61
	ORDER          reduce using rule 61
	GROUPING       reduce using rule 61
	AND            reduce using rule 61
	OR             reduce using rule 61
	XOR            reduce using rule 61
	EQ             reduce using rule 61
	GT             reduce using rule 61
	LT             reduce using rule 61
	MINUS          reduce using rule 61
	TIMES          reduce using rule 61
	DIVIDE         reduce using rule 61
	POWER          reduce using rule 61


State 77

	Str -> INT DOT . INT                                (rule 57)

	INT            shift, and enter state 109


State 78

	IntCalc -> ORD_OF Str .                             (rule 62)

	COMMA          reduce using rule 62
	OTHERWISE      reduce using rule 62
	RPAREN         reduce using rule 62
	PLUS           reduce using rule 62
	OUTPUT         reduce using rule 62
	END            reduce using rule 62
	WHEN           reduce using rule 62
	STORE          reduce using rule 62
	AS             reduce using rule 62
	ORDER          reduce using rule 62
	GROUPING       reduce using rule 62
	AND            reduce using rule 62
	OR             reduce using rule 62
	XOR            reduce using rule 62
	EQ             reduce using rule 62
	GT             reduce using rule 62
	LT             reduce using rule 62
	MINUS          reduce using rule 62
	TIMES          reduce using rule 62
	DIVIDE         reduce using rule 62
	POWER          reduce using rule 62


State 79

	IntCalc -> LENGTH Str .                             (rule 60)

	COMMA          reduce using rule 60
	OTHERWISE      reduce using rule 60
	RPAREN         reduce using rule 60
	PLUS           reduce using rule 60
	OUTPUT         reduce using rule 60
	END            reduce using rule 60
	WHEN           reduce using rule 60
	STORE          reduce using rule 60
	AS             reduce using rule 60
	ORDER          reduce using rule 60
	GROUPING       reduce using rule 60
	AND            reduce using rule 60
	OR             reduce using rule 60
	XOR            reduce using rule 60
	EQ             reduce using rule 60
	GT             reduce using rule 60
	LT             reduce using rule 60
	MINUS          reduce using rule 60
	TIMES          reduce using rule 60
	DIVIDE         reduce using rule 60
	POWER          reduce using rule 60


State 80

	Str -> QUOTE Str . QUOTE                            (rule 59)

	QUOTE          shift, and enter state 108


State 81

	Boolean -> NOT Boolean .                            (rule 44)

	OTHERWISE      reduce using rule 44
	RPAREN         reduce using rule 44
	OUTPUT         reduce using rule 44
	END            reduce using rule 44
	WHEN           reduce using rule 44
	STORE          reduce using rule 44
	AS             reduce using rule 44
	ORDER          reduce using rule 44
	GROUPING       reduce using rule 44
	AND            reduce using rule 44
	OR             reduce using rule 44
	XOR            reduce using rule 44


State 82

	Boolean -> LPAREN Boolean . BoolOp Boolean RPAREN    (rule 43)
	Boolean -> LPAREN Boolean . RPAREN                  (rule 47)

	RPAREN         shift, and enter state 104
	AND            shift, and enter state 105
	OR             shift, and enter state 106
	XOR            shift, and enter state 107

	BoolOp         goto state 103

State 83

	IntCalc -> IntCalc PLUS . IntCalc                   (rule 63)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 102

State 84

	Comparison -> IntCalc EQ . IntCalc                  (rule 53)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 101

State 85

	Comparison -> IntCalc GT . IntCalc                  (rule 54)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 100

State 86

	Comparison -> IntCalc LT . IntCalc                  (rule 55)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 99

State 87

	IntCalc -> IntCalc MINUS . IntCalc                  (rule 64)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 98

State 88

	IntCalc -> IntCalc TIMES . IntCalc                  (rule 65)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 97

State 89

	IntCalc -> IntCalc DIVIDE . IntCalc                 (rule 66)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 96

State 90

	IntCalc -> IntCalc POWER . IntCalc                  (rule 67)

	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	IntCalc        goto state 95

State 91

	Comparison -> Str EQ . EQ Str                       (rule 52)

	EQ             shift, and enter state 94


State 92

	ColumnList -> LPAREN ColumnList IF Boolean OTHERWISE . ColumnList RPAREN    (rule 12)

	LPAREN         shift, and enter state 11
	INT            shift, and enter state 12

	ColumnList     goto state 93
	Column         goto state 9

State 93

	ColumnList -> ColumnList . COMMA Column             (rule 11)
	ColumnList -> LPAREN ColumnList IF Boolean OTHERWISE ColumnList . RPAREN    (rule 12)

	COMMA          shift, and enter state 15
	RPAREN         shift, and enter state 124


State 94

	Comparison -> Str EQ EQ . Str                       (rule 52)

	QUOTE          shift, and enter state 32
	INT            shift, and enter state 35
	STRING         shift, and enter state 36

	Str            goto state 123

State 95

	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)
	IntCalc -> IntCalc POWER IntCalc .                  (rule 67)

	COMMA          reduce using rule 67
	OTHERWISE      reduce using rule 67
	RPAREN         reduce using rule 67
	PLUS           reduce using rule 67
	OUTPUT         reduce using rule 67
	END            reduce using rule 67
	WHEN           reduce using rule 67
	STORE          reduce using rule 67
	AS             reduce using rule 67
	ORDER          reduce using rule 67
	GROUPING       reduce using rule 67
	AND            reduce using rule 67
	OR             reduce using rule 67
	XOR            reduce using rule 67
	EQ             reduce using rule 67
	GT             reduce using rule 67
	LT             reduce using rule 67
	MINUS          reduce using rule 67
	TIMES          reduce using rule 67
	DIVIDE         reduce using rule 67
	POWER          shift, and enter state 90


State 96

	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc DIVIDE IntCalc .                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	COMMA          reduce using rule 66
	OTHERWISE      reduce using rule 66
	RPAREN         reduce using rule 66
	PLUS           reduce using rule 66
	OUTPUT         reduce using rule 66
	END            reduce using rule 66
	WHEN           reduce using rule 66
	STORE          reduce using rule 66
	AS             reduce using rule 66
	ORDER          reduce using rule 66
	GROUPING       reduce using rule 66
	AND            reduce using rule 66
	OR             reduce using rule 66
	XOR            reduce using rule 66
	EQ             reduce using rule 66
	GT             reduce using rule 66
	LT             reduce using rule 66
	MINUS          reduce using rule 66
	TIMES          reduce using rule 66
	DIVIDE         reduce using rule 66
	POWER          shift, and enter state 90


State 97

	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc TIMES IntCalc .                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	COMMA          reduce using rule 65
	OTHERWISE      reduce using rule 65
	RPAREN         reduce using rule 65
	PLUS           reduce using rule 65
	OUTPUT         reduce using rule 65
	END            reduce using rule 65
	WHEN           reduce using rule 65
	STORE          reduce using rule 65
	AS             reduce using rule 65
	ORDER          reduce using rule 65
	GROUPING       reduce using rule 65
	AND            reduce using rule 65
	OR             reduce using rule 65
	XOR            reduce using rule 65
	EQ             reduce using rule 65
	GT             reduce using rule 65
	LT             reduce using rule 65
	MINUS          reduce using rule 65
	TIMES          reduce using rule 65
	DIVIDE         reduce using rule 65
	POWER          shift, and enter state 90


State 98

	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc MINUS IntCalc .                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	COMMA          reduce using rule 64
	OTHERWISE      reduce using rule 64
	RPAREN         reduce using rule 64
	PLUS           reduce using rule 64
	OUTPUT         reduce using rule 64
	END            reduce using rule 64
	WHEN           reduce using rule 64
	STORE          reduce using rule 64
	AS             reduce using rule 64
	ORDER          reduce using rule 64
	GROUPING       reduce using rule 64
	AND            reduce using rule 64
	OR             reduce using rule 64
	XOR            reduce using rule 64
	EQ             reduce using rule 64
	GT             reduce using rule 64
	LT             reduce using rule 64
	MINUS          reduce using rule 64
	TIMES          reduce using rule 64
	DIVIDE         reduce using rule 64
	POWER          shift, and enter state 90


State 99

	Comparison -> IntCalc LT IntCalc .                  (rule 55)
	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	OTHERWISE      reduce using rule 55
	RPAREN         reduce using rule 55
	PLUS           shift, and enter state 83
	OUTPUT         reduce using rule 55
	END            reduce using rule 55
	WHEN           reduce using rule 55
	STORE          reduce using rule 55
	AS             reduce using rule 55
	ORDER          reduce using rule 55
	GROUPING       reduce using rule 55
	AND            reduce using rule 55
	OR             reduce using rule 55
	XOR            reduce using rule 55
	MINUS          shift, and enter state 87
	TIMES          shift, and enter state 88
	DIVIDE         shift, and enter state 89
	POWER          shift, and enter state 90


State 100

	Comparison -> IntCalc GT IntCalc .                  (rule 54)
	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	OTHERWISE      reduce using rule 54
	RPAREN         reduce using rule 54
	PLUS           shift, and enter state 83
	OUTPUT         reduce using rule 54
	END            reduce using rule 54
	WHEN           reduce using rule 54
	STORE          reduce using rule 54
	AS             reduce using rule 54
	ORDER          reduce using rule 54
	GROUPING       reduce using rule 54
	AND            reduce using rule 54
	OR             reduce using rule 54
	XOR            reduce using rule 54
	MINUS          shift, and enter state 87
	TIMES          shift, and enter state 88
	DIVIDE         shift, and enter state 89
	POWER          shift, and enter state 90


State 101

	Comparison -> IntCalc EQ IntCalc .                  (rule 53)
	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	OTHERWISE      reduce using rule 53
	RPAREN         reduce using rule 53
	PLUS           shift, and enter state 83
	OUTPUT         reduce using rule 53
	END            reduce using rule 53
	WHEN           reduce using rule 53
	STORE          reduce using rule 53
	AS             reduce using rule 53
	ORDER          reduce using rule 53
	GROUPING       reduce using rule 53
	AND            reduce using rule 53
	OR             reduce using rule 53
	XOR            reduce using rule 53
	MINUS          shift, and enter state 87
	TIMES          shift, and enter state 88
	DIVIDE         shift, and enter state 89
	POWER          shift, and enter state 90


State 102

	IntCalc -> IntCalc . PLUS IntCalc                   (rule 63)
	IntCalc -> IntCalc PLUS IntCalc .                   (rule 63)
	IntCalc -> IntCalc . MINUS IntCalc                  (rule 64)
	IntCalc -> IntCalc . TIMES IntCalc                  (rule 65)
	IntCalc -> IntCalc . DIVIDE IntCalc                 (rule 66)
	IntCalc -> IntCalc . POWER IntCalc                  (rule 67)

	COMMA          reduce using rule 63
	OTHERWISE      reduce using rule 63
	RPAREN         reduce using rule 63
	PLUS           reduce using rule 63
	OUTPUT         reduce using rule 63
	END            reduce using rule 63
	WHEN           reduce using rule 63
	STORE          reduce using rule 63
	AS             reduce using rule 63
	ORDER          reduce using rule 63
	GROUPING       reduce using rule 63
	AND            reduce using rule 63
	OR             reduce using rule 63
	XOR            reduce using rule 63
	EQ             reduce using rule 63
	GT             reduce using rule 63
	LT             reduce using rule 63
	MINUS          reduce using rule 63
	TIMES          reduce using rule 63
	DIVIDE         reduce using rule 63
	POWER          shift, and enter state 90


State 103

	Boolean -> LPAREN Boolean BoolOp . Boolean RPAREN    (rule 43)

	LPAREN         shift, and enter state 28
	NOT            shift, and enter state 29
	TRUE           shift, and enter state 30
	FALSE          shift, and enter state 31
	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Boolean        goto state 122
	Comparison     goto state 25
	Str            goto state 26
	IntCalc        goto state 27

State 104

	Boolean -> LPAREN Boolean RPAREN .                  (rule 47)

	OTHERWISE      reduce using rule 47
	RPAREN         reduce using rule 47
	OUTPUT         reduce using rule 47
	END            reduce using rule 47
	WHEN           reduce using rule 47
	STORE          reduce using rule 47
	AS             reduce using rule 47
	ORDER          reduce using rule 47
	GROUPING       reduce using rule 47
	AND            reduce using rule 47
	OR             reduce using rule 47
	XOR            reduce using rule 47


State 105

	BoolOp -> AND .                                     (rule 49)

	LPAREN         reduce using rule 49
	NOT            reduce using rule 49
	TRUE           reduce using rule 49
	FALSE          reduce using rule 49
	QUOTE          reduce using rule 49
	LENGTH         reduce using rule 49
	ORD_OF         reduce using rule 49
	INT            reduce using rule 49
	STRING         reduce using rule 49
	NUM            reduce using rule 49


State 106

	BoolOp -> OR .                                      (rule 50)

	LPAREN         reduce using rule 50
	NOT            reduce using rule 50
	TRUE           reduce using rule 50
	FALSE          reduce using rule 50
	QUOTE          reduce using rule 50
	LENGTH         reduce using rule 50
	ORD_OF         reduce using rule 50
	INT            reduce using rule 50
	STRING         reduce using rule 50
	NUM            reduce using rule 50


State 107

	BoolOp -> XOR .                                     (rule 51)

	LPAREN         reduce using rule 51
	NOT            reduce using rule 51
	TRUE           reduce using rule 51
	FALSE          reduce using rule 51
	QUOTE          reduce using rule 51
	LENGTH         reduce using rule 51
	ORD_OF         reduce using rule 51
	INT            reduce using rule 51
	STRING         reduce using rule 51
	NUM            reduce using rule 51


State 108

	Str -> QUOTE Str QUOTE .                            (rule 59)

	COMMA          reduce using rule 59
	OTHERWISE      reduce using rule 59
	RPAREN         reduce using rule 59
	PLUS           reduce using rule 59
	OUTPUT         reduce using rule 59
	END            reduce using rule 59
	WHEN           reduce using rule 59
	STORE          reduce using rule 59
	AS             reduce using rule 59
	ORDER          reduce using rule 59
	GROUPING       reduce using rule 59
	AND            reduce using rule 59
	OR             reduce using rule 59
	XOR            reduce using rule 59
	EQ             reduce using rule 59
	GT             reduce using rule 59
	LT             reduce using rule 59
	QUOTE          reduce using rule 59
	MINUS          reduce using rule 59
	TIMES          reduce using rule 59
	DIVIDE         reduce using rule 59
	POWER          reduce using rule 59


State 109

	Str -> INT DOT INT .                                (rule 57)

	COMMA          reduce using rule 57
	OTHERWISE      reduce using rule 57
	RPAREN         reduce using rule 57
	PLUS           reduce using rule 57
	OUTPUT         reduce using rule 57
	END            reduce using rule 57
	WHEN           reduce using rule 57
	STORE          reduce using rule 57
	AS             reduce using rule 57
	ORDER          reduce using rule 57
	GROUPING       reduce using rule 57
	AND            reduce using rule 57
	OR             reduce using rule 57
	XOR            reduce using rule 57
	EQ             reduce using rule 57
	GT             reduce using rule 57
	LT             reduce using rule 57
	QUOTE          reduce using rule 57
	MINUS          reduce using rule 57
	TIMES          reduce using rule 57
	DIVIDE         reduce using rule 57
	POWER          reduce using rule 57


State 110

	Tables -> LPAREN Tables PLUS Tables . RPAREN        (rule 17)
	Tables -> Tables . COMMA Tables                     (rule 19)

	COMMA          shift, and enter state 43
	RPAREN         shift, and enter state 121


State 111

	Tables -> LPAREN Tables TJoin Tables . ON Comparison RPAREN    (rule 18)
	Tables -> Tables . COMMA Tables                     (rule 19)

	COMMA          shift, and enter state 43
	ON             shift, and enter state 120


State 112

	Tables -> LPAREN Tables TableExpr Tables . RPAREN    (rule 16)
	Tables -> Tables . COMMA Tables                     (rule 19)

	COMMA          shift, and enter state 43
	RPAREN         shift, and enter state 119


State 113

	Output -> QUOTE INT . QUOTE                         (rule 38)

	QUOTE          shift, and enter state 118


State 114

	Outputs -> Outputs COMMA . Output                   (rule 35)

	QUOTE          shift, and enter state 58
	INT            shift, and enter state 59
	STRING         shift, and enter state 60

	Output         goto state 117

State 115

	Order -> IntCalc COMMA . Order                      (rule 40)

	UP             shift, and enter state 54
	DOWN           shift, and enter state 55
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	NUM            shift, and enter state 37

	Order          goto state 116
	IntCalc        goto state 53

State 116

	Order -> IntCalc COMMA Order .                      (rule 40)

	OUTPUT         reduce using rule 40
	END            reduce using rule 40
	WHEN           reduce using rule 40
	STORE          reduce using rule 40
	AS             reduce using rule 40
	ORDER          reduce using rule 40
	GROUPING       reduce using rule 40


State 117

	Outputs -> Outputs COMMA Output .                   (rule 35)

	COMMA          reduce using rule 35
	OUTPUT         reduce using rule 35
	END            reduce using rule 35
	WHEN           reduce using rule 35
	STORE          reduce using rule 35
	AS             reduce using rule 35
	ORDER          reduce using rule 35
	GROUPING       reduce using rule 35


State 118

	Output -> QUOTE INT QUOTE .                         (rule 38)

	COMMA          reduce using rule 38
	OUTPUT         reduce using rule 38
	END            reduce using rule 38
	WHEN           reduce using rule 38
	STORE          reduce using rule 38
	AS             reduce using rule 38
	ORDER          reduce using rule 38
	GROUPING       reduce using rule 38


State 119

	Tables -> LPAREN Tables TableExpr Tables RPAREN .    (rule 16)

	COMMA          reduce using rule 16
	RPAREN         reduce using rule 16
	PLUS           reduce using rule 16
	ON             reduce using rule 16
	CARTESIAN      reduce using rule 16
	UNION          reduce using rule 16
	INTERSECT      reduce using rule 16
	INNER          reduce using rule 16
	LEFT           reduce using rule 16
	RIGHT          reduce using rule 16
	FULL           reduce using rule 16
	OUTPUT         reduce using rule 16
	END            reduce using rule 16
	WHEN           reduce using rule 16
	STORE          reduce using rule 16
	AS             reduce using rule 16
	ORDER          reduce using rule 16
	GROUPING       reduce using rule 16


State 120

	Tables -> LPAREN Tables TJoin Tables ON . Comparison RPAREN    (rule 18)

	QUOTE          shift, and enter state 32
	LENGTH         shift, and enter state 33
	ORD_OF         shift, and enter state 34
	INT            shift, and enter state 35
	STRING         shift, and enter state 36
	NUM            shift, and enter state 37

	Comparison     goto state 126
	Str            goto state 26
	IntCalc        goto state 27

State 121

	Tables -> LPAREN Tables PLUS Tables RPAREN .        (rule 17)

	COMMA          reduce using rule 17
	RPAREN         reduce using rule 17
	PLUS           reduce using rule 17
	ON             reduce using rule 17
	CARTESIAN      reduce using rule 17
	UNION          reduce using rule 17
	INTERSECT      reduce using rule 17
	INNER          reduce using rule 17
	LEFT           reduce using rule 17
	RIGHT          reduce using rule 17
	FULL           reduce using rule 17
	OUTPUT         reduce using rule 17
	END            reduce using rule 17
	WHEN           reduce using rule 17
	STORE          reduce using rule 17
	AS             reduce using rule 17
	ORDER          reduce using rule 17
	GROUPING       reduce using rule 17


State 122

	Boolean -> LPAREN Boolean BoolOp Boolean . RPAREN    (rule 43)

	RPAREN         shift, and enter state 125


State 123

	Comparison -> Str EQ EQ Str .                       (rule 52)

	OTHERWISE      reduce using rule 52
	RPAREN         reduce using rule 52
	OUTPUT         reduce using rule 52
	END            reduce using rule 52
	WHEN           reduce using rule 52
	STORE          reduce using rule 52
	AS             reduce using rule 52
	ORDER          reduce using rule 52
	GROUPING       reduce using rule 52
	AND            reduce using rule 52
	OR             reduce using rule 52
	XOR            reduce using rule 52


State 124

	ColumnList -> LPAREN ColumnList IF Boolean OTHERWISE ColumnList RPAREN .    (rule 12)

	FROM           reduce using rule 12
	COMMA          reduce using rule 12
	IF             reduce using rule 12
	RPAREN         reduce using rule 12


State 125

	Boolean -> LPAREN Boolean BoolOp Boolean RPAREN .    (rule 43)

	OTHERWISE      reduce using rule 43
	RPAREN         reduce using rule 43
	OUTPUT         reduce using rule 43
	END            reduce using rule 43
	WHEN           reduce using rule 43
	STORE          reduce using rule 43
	AS             reduce using rule 43
	ORDER          reduce using rule 43
	GROUPING       reduce using rule 43
	AND            reduce using rule 43
	OR             reduce using rule 43
	XOR            reduce using rule 43


State 126

	Tables -> LPAREN Tables TJoin Tables ON Comparison . RPAREN    (rule 18)

	RPAREN         shift, and enter state 127


State 127

	Tables -> LPAREN Tables TJoin Tables ON Comparison RPAREN .    (rule 18)

	COMMA          reduce using rule 18
	RPAREN         reduce using rule 18
	PLUS           reduce using rule 18
	ON             reduce using rule 18
	CARTESIAN      reduce using rule 18
	UNION          reduce using rule 18
	INTERSECT      reduce using rule 18
	INNER          reduce using rule 18
	LEFT           reduce using rule 18
	RIGHT          reduce using rule 18
	FULL           reduce using rule 18
	OUTPUT         reduce using rule 18
	END            reduce using rule 18
	WHEN           reduce using rule 18
	STORE          reduce using rule 18
	AS             reduce using rule 18
	ORDER          reduce using rule 18
	GROUPING       reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 68
Number of terminals: 49
Number of non-terminals: 20
Number of states: 128
